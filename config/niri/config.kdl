// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.
// https://yalter.github.io/niri/Configuration:-Introduction

// Note that running niri as a session supports xdg-desktop-autostart.
// spawn-at-startup "waybar"
// To autostart something with systemd, like waybar, run:
// systemctl --user add-wants niri.service waybar.service kanshi.service plasma-polkit-agent.service swayidle.service niri-exit.service

spawn-sh-at-startup "wl-paste --type text  --watch cliphist store"
spawn-sh-at-startup "wl-paste --type image --watch cliphist store"

prefer-no-csd

screenshot-path null

cursor {
    xcursor-theme "Breeze_Light"
    xcursor-size 36
}

// Input device configuration.
// https://yalter.github.io/niri/Configuration:-Input
// For xkb information, see xkeyboard-config(7).
input {
    keyboard {
        xkb {
            layout "us,ru"
            options "grp:win_space_toggle,grp:caps_toggle,grp_led:scroll"
        }
        numlock // Enable on startup
    }
    touchpad {
        tap
        dwtp // Enable while typing
        natural-scroll
    }
    mouse {
        accel-speed -0.2
        accel-profile "flat"
    }
    // Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    focus-follows-mouse max-scroll-amount="0%"
}

// https://yalter.github.io/niri/Configuration:-Layout
layout {
    background-color "#000000"
    always-center-single-column
    center-focused-column "never"
    preset-column-widths {
        proportion 0.5 // 1/2
        proportion 0.33333 // 1/3
        proportion 0.66667 // 2/3
    }
    preset-window-heights {
        proportion 0.5 // 1/2
        proportion 0.33333 // 1/3
        proportion 1.0
    }
    default-column-width { proportion 0.5; }

    gaps 0
    focus-ring {
        off
    }
    border {
        width 2
        active-color "#3daee9"
        inactive-color "#141618"
        urgent-color "#9b0000"
    }
    tab-indicator {
        place-within-column
    }
}

overview {
    backdrop-color "#000000"
    workspace-shadow {
        off
    }
}

// https://yalter.github.io/niri/Configuration:-Window-Rules

// Block out two password managers from screen capture.
window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    block-out-from "screen-capture"
    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

// Floating Browser profile manager
window-rule {
    match app-id="librewolf" title=" - Choose User Profile$"

    open-floating true
}

// Similliar floating window size for some pop ups
window-rule {
    match app-id="nm-connection-editor"
    match app-id=".blueman-manager-wrapped"
    match app-id="pavucontrol"
    match app-id="waypaper"
    match app-id="org.freedesktop.impl.portal.desktop.kde"
    match app-id="soffice.bin" is-floating=true
    match app-id="soffice.bin" title="Open"
    match app-id="soffice.bin" title="Export"

    open-floating true
    default-column-width { proportion 0.5; }
    default-window-height { proportion 0.8; }
}

// Steam notifications fix
/-window-rule {
    match app-id="steam" title=r#"^notificationtoasts_\d+_desktop$"#
    default-floating-position x=10 y=10 relative-to="bottom-right"
}

binds {
    // To find an XKB name for a particular key, you may use a program like wev.
    //
    // "Mod" is equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions can also be invoked with `niri msg action do-something`.

    // Shows a list of important hotkeys (Mod-?).
    Mod+Shift+Slash { show-hotkey-overlay; }

    Mod+D hotkey-overlay-title="Run an Application launcher" { spawn "fuzzel"; }
    Mod+V hotkey-overlay-title="View clipboard history" { spawn-sh "cliphist list | fuzzel --width=90 --prompt /cliphist/ --dmenu | cliphist decode | wl-copy"; }
    Mod+E hotkey-overlay-title="Open a File manager" { spawn "dolphin"; }
    Ctrl+Alt+T hotkey-overlay-title="Open a Terminal" { spawn "kitty"; }
    Ctrl+Alt+W hotkey-overlay-title="Open a Browser" { spawn "librewolf"; }
    Ctrl+Alt+E hotkey-overlay-title="Open a RF Browser" { spawn-sh "librewolf -P RF"; }
    Ctrl+Alt+Q hotkey-overlay-title="Open a Telegram" { spawn "Telegram"; }
    Ctrl+Alt+O hotkey-overlay-title="Open a LibreOffice" { spawn-sh "QT_QPA_PLATFORM=xcb SAL_USE_VCLPLUGIN=kf6 libreoffice"; }

    Mod+B hotkey-overlay-title="Toggle waybar display" { spawn-sh "pkill -SIGUSR1 waybar"; }
    Mod+Ctrl+B hotkey-overlay-title="Restart waybar" { spawn-sh "systemctl --user restart waybar"; }
    Ctrl+Alt+L hotkey-overlay-title="Lock the Screen" { spawn "swaylock"; }
    Mod+Shift+W hotkey-overlay-title="Refresh Wallpaper" cooldown-ms=2000 { spawn-sh "systemctl --user restart swaybg"; }

    Super+Alt+S allow-when-locked=true hotkey-overlay-title=null { spawn-sh "pkill orca || exec orca"; }
    Ctrl+Shift+Escape hotkey-overlay-title="Run process explorer" { spawn-sh "kitty -e htop"; }

    XF86MonBrightnessUp allow-when-locked=true { spawn-sh "brightnessctl --class=backlight set +10%"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn-sh "brightnessctl --class=backlight set 10%-"; }

    XF86AudioLowerVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
    XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
    XF86AudioMicMute     allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }

    XF86AudioPlay  allow-when-locked=true { spawn-sh "playerctl play-pause"; }
    XF86AudioPause allow-when-locked=true { spawn-sh "playerctl play-pause"; }
    XF86AudioStop  allow-when-locked=true { spawn-sh "playerctl play-pause"; }
    XF86AudioPrev  allow-when-locked=true { spawn-sh "playerctl previous"; }
    XF86AudioNext  allow-when-locked=true { spawn-sh "playerctl next"; }

    Mod+G repeat=false { toggle-overview; }

    Mod+Q repeat=false { close-window; }
    Alt+F4 repeat=false { close-window; }

    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-or-workspace-down; }
    Mod+Up    { focus-window-or-workspace-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+L     { focus-column-right; }

    Mod+Shift+Left  { move-column-left; }
    Mod+Shift+Down  { move-window-down-or-to-workspace-down; }
    Mod+Shift+Up    { move-window-up-or-to-workspace-up; }
    Mod+Shift+Right { move-column-right; }
    Mod+Shift+H     { move-column-left; }
    Mod+Shift+J     { move-window-down-or-to-workspace-down; }
    Mod+Shift+K     { move-window-up-or-to-workspace-up; }
    Mod+Shift+L     { move-column-right; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Shift+Home { move-column-to-first; }
    Mod+Shift+End  { move-column-to-last; }

    Mod+Ctrl+Left  { focus-monitor-left; }
    Mod+Ctrl+Down  { focus-monitor-down; }
    Mod+Ctrl+Up    { focus-monitor-up; }
    Mod+Ctrl+Right { focus-monitor-right; }
    Mod+Ctrl+H     { focus-monitor-left; }
    Mod+Ctrl+J     { focus-monitor-down; }
    Mod+Ctrl+K     { focus-monitor-up; }
    Mod+Ctrl+L     { focus-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }
    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Shift+Page_Down { move-column-to-workspace-down; }
    Mod+Shift+Page_Up   { move-column-to-workspace-up; }
    Mod+Shift+U         { move-column-to-workspace-down; }
    Mod+Shift+I         { move-column-to-workspace-up; }

    Mod+Ctrl+Page_Down { move-workspace-down; }
    Mod+Ctrl+Page_Up   { move-workspace-up; }
    Mod+Ctrl+U         { move-workspace-down; }
    Mod+Ctrl+I         { move-workspace-up; }

    //Mod+Ctrl+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    //Mod+Ctrl+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    //Mod+Shift+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    //Mod+Shift+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+Ctrl+WheelScrollUp { focus-monitor-left; }
    Mod+Ctrl+WheelScrollDown  { focus-monitor-right; }

    Mod+Shift+Ctrl+WheelScrollUp { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+WheelScrollDown { move-column-to-monitor-right; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Shift+WheelScrollRight { move-column-right; }
    Mod+Shift+WheelScrollLeft  { move-column-left; }

    Mod+WheelScrollDown      { focus-column-right; }
    Mod+WheelScrollUp        { focus-column-left; }
    Mod+Shift+WheelScrollDown { move-column-right; }
    Mod+Shift+WheelScrollUp   { move-column-left; }

    Mod+TouchpadScrollDown { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02+"; }
    Mod+TouchpadScrollUp   { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02-"; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    Mod+Ctrl+C { center-visible-columns; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    Mod+Shift+V       { toggle-window-floating; }
    Mod+Ctrl+V { switch-focus-between-floating-and-tiling; }

    Mod+W { toggle-column-tabbed-display; }

    Print { screenshot; }
    Mod+Shift+S { screenshot; }
    Mod+Shift+Print { screenshot-screen; }
    Mod+Print { screenshot-window; }

    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    Mod+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }

    Ctrl+Alt+Home { spawn-sh "kitty -e cryptomount.sh"; }
    Ctrl+Alt+End { spawn-sh "kitty -e cryptoclose.sh"; }

    Mod+Shift+P { power-off-monitors; }
}
